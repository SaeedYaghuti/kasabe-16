# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AccessRole {
  role_id: Int!
  role_resource: String!
  role_action: String!
  role_possession: String!
}

type Address {
  address_id: Int!
  person: Person!
  person_id: Int!
  address_title: String!
  address_line1: String!
  address_line2: String
  location: String
  postal_code: String
  city: String!
  state: String!
  country: String!
  email: String
  phone: String!
  fax: String
}

type Article {
  article_id: Int!
  article_type: ArticleType!
  posts: [Post!]
  comments: [Comment!]
  rates: [Rate!]
}

"""show article type"""
enum ArticleType {
  MERCHANT_PROFILE
  POST
  COMMENT
  RATE
}

type Auth {
  auth_id: Int!
  authname: String!
  auth_type: AuthType!
  posts: [Post!]
  comments: [Comment!]
  rates: [Rate!]
  roles: [AuthType!]!
}

"""show auth type"""
enum AuthType {
  CUSTOMER
  SUPPLIER
  SHIPPER
  ADMIN
  EDITOR
  ACCOUNTER
  CASHIER
  SALESMAN
  SUBSCRIBED
  MERCHANT
}

input BuildArticleInput {
  article_type: ArticleType
}

input BuildCommentInput {
  auth_id: Int!
  audience_article_id: Float!
  comment_text: String!
}

input BuildHeartInput {
  auth_id: Int!
  article_id: Int!
}

input BuildMerchantCategoryInput {
  category_name: String!
  category_description: String!
  parentId: Int
  flag_merchant_id: Int
  picture_url: String
  isActive: Boolean
}

input BuildMerchantInput {
  auth_id: Int!
  merchant_title: String!
  tiny_description: String!
  long_description: String
  contact_name: String!
  instagram_url: String
  number_call: String
  number_whatsapp: String
  number_telegram: String
  bank_card_number: String
  bank_card_details: String
  avatar_url: String
  header_url: String
  note: String
  location: String
  merchant_category_id: Int
  tag_titles: [String!]
}

input BuildPostInput {
  auth_id: Int!
  merchant_id: Int!
  post_text: String!
  picture_urls: [String!]
}

input BuildRateInput {
  auth_id: Int!
  audience_article_id: Float!
  rate_text: String!
  rate_stars: Float!
}

input BuildSeenInput {
  auth_id: Int!
  article_id: Int!
}

input BuildTagInput {
  tag_title: String!
}

type Comment {
  comment_id: Int!
  auth: Auth
  auth_id: Int!
  comment_text: String!
  heart_count: String!
  liked: Boolean!
  comment_count: String!
  created_at: DateTime
  updated_at: DateTime
}

input CreateAddressInput {
  person_id: Int!
  address_title: String!
  address_line1: String!
  address_line2: String
  location: String
  postal_code: String
  city: String!
  state: String!
  country: String!
  email: String
  phone: String!
  fax: String
}

input CreateAuthInput {
  authname: String!
  password: String!
  auth_type: [AuthType!]!
}

input CreateCustomerInput {
  customer_name: String!
  password: String!
  address_id: Int
}

input CreateOrderDetailsInput {
  product_id: Int!
  quantity: Float!
  shipper_id: Int
  required_date: DateTime
  ship_date: DateTime
  freight: Float
  status: String
}

input CreateOrderInput {
  order_number: String!
  customer_id: Int!
  shipper_id: Int!
  order_date: DateTime!
  required_date: DateTime!
  ship_date: DateTime!
  freight: Float!
  status: String!
  order_details: [CreateOrderDetailsInput!]!
}

input CreatePersonInput {
  person_role: PersonRole
  person_name: String!
}

input CreateProductCategoryInput {
  category_name: String!
  category_description: String!
  parentId: Int
  flag_product_id: Int
  picture_url: String
  isActive: Boolean
}

input CreateProductInput {
  sku: String!
  supplier_sku: String
  product_category_id: Int
  product_name: String!
  msrp: Float
  price: Float!
  price_currency: String
  currency_symbole: String
  unit_title: String
  unit_weight: Float
  unit_weight_title: String
  is_discount: Boolean
  discount: Float
  ranking: Int
  reorder_level: Int
  is_active: Boolean
  tag_ids: [Int!]
}

input CreateShipperInput {
  shipper_name: String!
  contact_name: String!
  contact_title: String!
  url: String
  logo: String
  note: String
  our_id: String
}

input CreateSupplierInput {
  supplier_name: String!
  contact_name: String!
  contact_title: String!
  url: String
  logo: String
  note: String
  our_id: String
}

type Customer {
  customer_id: Int!
  person: Person!
  person_id: Int!
  customer_name: String!
  password: String!
  order: [Order!]
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Heart {
  heart_id: Int!
  auth: Auth
  auth_id: Int!
  article: Article
  article_id: Int!
}

type Item {
  item_id: Int!
  item_title: String!
  item_description: String
}

input ItemInput {
  title: String!
  price: Float!
  description: String!
}

type ItemType {
  id: Int!
  title: String!
  price: Float!
  description: String!
}

input LoginAuthInput {
  authname: String!
  password: String!
}

type LoginToken {
  accessToken: String!
}

type Merchant {
  merchant_id: Int!
  auth: Auth
  auth_id: Int
  merchant_title: String!
  tiny_description: String!
  long_description: String
  contact_name: String!
  instagram_url: String
  number_call: String
  number_whatsapp: String
  number_telegram: String
  bank_card_number: String
  bank_card_details: String
  avatar_url: String
  header_url: String
  note: String
  location: String
  created_at: DateTime
  updated_at: DateTime
  category: MerchantCategory
  merchant_category_id: Int
  tags: [Tag!]
  rate_count: String!
  rate_avg: String!
}

type MerchantCategory {
  id: Int!
  category_name: String!
  category_description: String!
  children: [MerchantCategory!]
  parent: MerchantCategory
  parentId: Int
  flag_merchant: Merchant
  flag_merchant_id: Int
  picture_url: String
  isActive: Boolean!
  merchants: [Merchant!]
}

type MessageType {
  message: String!
}

type Mutation {
  authTestMutation(message: String!): MessageType!
  build(seen: BuildSeenInput!): Seen!
  addressTestMutation(message: String!): MessageType!
  rebuild(seen: UpdateSeenInput!): Seen!
  articleTestMutation(message: String!): MessageType!
  heartTestMutation(message: String!): MessageType!
  commentTestMutation(message: String!): MessageType!
  customerTestMutation(message: String!): MessageType!
  postTestMutation(message: String!): MessageType!
  rateTestMutation(message: String!): MessageType!
  merchantTestMutation(message: String!): MessageType!
  merchantCategoryTestMutation(message: String!): MessageType!
  orderTestMutation(message: String!): MessageType!
  orderDetailsTestMutation(message: String!): MessageType!
  buildDetails(orderDetails: CreateOrderDetailsInput!): OrderDetails!
  rebuildDetails(orderDetails: UpdateOrderDetailsInput!): OrderDetails!
  personTestMutation(message: String!): MessageType!
  productTestMutation(message: String!): MessageType!
  productCategoryTestMutation(message: String!): MessageType!
  shipperTestMutation(message: String!): MessageType!
  supplierTestMutation(message: String!): MessageType!
  tagTestMutation(message: String!): MessageType!
  kasabeTestMutation(message: String!): MessageType!
  seenTestMutation(message: String!): MessageType!
  createItem(input: ItemInput!): ItemType!
  updateItem(input: ItemInput!, id: String!): ItemType!
  deleteItem(id: String!): ItemType!
}

type Order {
  order_id: Int!
  order_number: String!
  customer: Customer!
  customer_id: Int!
  shipper: Shipper
  shipper_id: Int
  order_date: DateTime!
  required_date: DateTime!
  ship_date: DateTime!
  freight: Float
  status: OrderStatus!
  order_details: [OrderDetails!]!
}

type OrderDetails {
  order_details_id: Int!
  order: Product!
  order_id: Int!
  product: Product!
  product_id: Int!
  msrp: Float!
  discount: Float!
  quantity: Int!
  price: Float!
  shipper: Shipper!
  shipper_id: Int!
  required_date: DateTime
  ship_date: DateTime
  freight: Float
  status: OrderStatus!
}

"""show order status"""
enum OrderStatus {
  PENDING
  PACKAGED
  DELEVIRED
  PAID
  CANCELED
}

type Person {
  person_id: Int!
  person_role: PersonRole!
  person_name: String!
}

"""show person role"""
enum PersonRole {
  CUSTOMER
  SUPPLIER
  SHIPPER
  STAFF
}

type Post {
  post_id: Int!
  auth: Auth
  auth_id: Int!
  post_text: String!
  picture_urls: [String!]
  created_at: DateTime
  updated_at: DateTime
  heart_count: String!
  liked: Boolean!
}

type Product {
  product_id: Int!
  sku: String!
  supplier_sku: String
  category: ProductCategory
  product_category_id: Int
  product_name: String!
  msrp: Float
  price: Float!
  price_currency: String
  currency_symbole: String
  unit_title: String
  unit_weight: Float
  unit_weight_title: String
  is_discount: Boolean
  discount: Float
  ranking: Int
  reorder_level: Int
  is_active: Boolean
  tags: [Tag!]
  order_details: [OrderDetails!]
}

type ProductAttribute {
  attribute_id: Int!
  attribute_name: String!
}

type ProductAttributeValueNumber {
  value_id: Int!
  product: Product!
  attribute: ProductAttribute!
  value: Float!
  unit: String!
}

type ProductAttributeValueString {
  value_id: Int!
  product: Product!
  attribute: ProductAttribute!
  value: String!
  unit: String!
}

type ProductCategory {
  id: Int!
  category_name: String!
  category_description: String!
  children: [ProductCategory!]
  parent: ProductCategory
  parentId: Int
  flag_product: Product
  flag_product_id: Int
  picture_url: String
  isActive: Boolean!
  products: [Product!]
}

type Query {
  authTestQuery(message: String!): MessageType!
  testGuardQuery(message: String!): MessageType!
  whoAmI: Auth!
  testAC: Auth!
  testRBAC: String!
  loginAuth(loginAuthInput: LoginAuthInput!): LoginToken!
  addressTestQuery(message: String!): MessageType!
  fetchById(seen_id: Float!): Seen!
  articleTestQuery(message: String!): MessageType!
  heartTestQuery(message: String!): MessageType!
  commentTestQuery(message: String!): MessageType!
  customerTestQuery(message: String!): MessageType!
  postTestQuery(message: String!): MessageType!
  rateTestQuery(message: String!): MessageType!
  merchantTestQuery(message: String!): MessageType!
  merchantCategoryTestQuery(message: String!): MessageType!
  orderTestQuery(message: String!): MessageType!
  orderDetailsTestQuery(message: String!): MessageType!
  getOrderDetailsById(orderDetails_id: Float!): OrderDetails!
  personTestQuery(message: String!): MessageType!
  productTestQuery(message: String!): MessageType!
  productCategoryTestQuery(message: String!): MessageType!
  shipperTestQuery(message: String!): MessageType!
  supplierTestQuery(message: String!): MessageType!
  tagTestQuery(message: String!): MessageType!
  kasabeTestQuery(message: String!): MessageType!
  hello: String!
  seenTestQuery(message: String!): MessageType!
  items: [ItemType!]!
}

type Rate {
  rate_id: Int!
  auth: Auth
  auth_id: Int!
  rate_text: String!
  rate_stars: Float!
  heart_count: String!
  liked: Boolean!
  created_at: DateTime
  updated_at: DateTime
}

type Relation {
  relation_id: Int!
  auth: Auth
  auth_id: Int!
  merchant: Merchant
  merchant_id: Int!
  relation_type: RelationType
  created_at: DateTime
  updated_at: DateTime
}

"""show relation type"""
enum RelationType {
  ACTIVE
  BLOCK
  MUTE
}

type Seen {
  seen_id: Int!
  auth: Auth
  auth_id: Int!
  article: Article
  article_id: Int!
  created_at: DateTime
}

type Shipper {
  shipper_id: Int!
  person: Person
  person_id: Int!
  shipper_name: String!
  contact_name: String!
  contact_title: String!
  url: String
  logo: String
  note: String
  our_id: String
  order: [Order!]
}

type Supplier {
  supplier_id: Int!
  person: Person!
  person_id: Int!
  supplier_name: String!
  contact_name: String!
  contact_title: String!
  url: String
  logo: String
  note: String
  our_id: String
}

type Tag {
  tag_id: Int!
  tag_title: String!
  products: [Product!]!
  merchants: [Merchant!]!
}

input UpdateAddressInput {
  address_id: Int!
  address_title: String!
  address_line1: String!
  address_line2: String
  location: String
  postal_code: String
  city: String!
  state: String!
  country: String!
  email: String
  phone: String!
  fax: String
}

input UpdateArticleInput {
  article_id: Int!
  article_type: ArticleType!
}

input UpdateCommentInput {
  comment_id: Int!
  comment_name: String!
}

input UpdateCustomerInput {
  customer_id: Int!
  customer_name: String!
  password: String!
}

input UpdateHeartInput {
  heart_id: Int!
}

input UpdateMerchantCategoryInput {
  id: Int!
  category_name: String!
  category_description: String!
  parentId: Int
  flag_merchant_id: Int
  picture_url: String
  isActive: Boolean
}

input UpdateMerchantInput {
  merchant_id: Int!
  merchant_title: String
  tiny_description: String
  long_description: String
  contact_name: String
  instagram_url: String
  number_call: String
  number_whatsapp: String
  number_telegram: String
  bank_card_number: String
  bank_card_details: String
  avatar_url: String
  header_url: String
  note: String
  location: String
  product_category_id: Int
  tag_ids: [Int!]
  tag_inputs: [BuildTagInput!]
}

input UpdateOrderDetailsInput {
  order_details_id: Int!
  quantity: Float
  shipper_id: Int
  required_date: DateTime
  ship_date: DateTime
  freight: Float
  status: String
}

input UpdateOrderInput {
  order_id: Int!
  shipper_id: Int
  required_date: DateTime
  ship_date: DateTime
  freight: Float
  status: String
  order_details: [UpdateOrderDetailsInput!]
}

input UpdatePersonInput {
  person_id: Int!
  person_role: PersonRole!
  person_name: String!
}

input UpdatePostInput {
  post_id: Int!
  post_name: String!
}

input UpdateProductCategoryInput {
  id: Int!
  category_name: String!
  category_description: String!
  parentId: Int
  flag_product_id: Int
  picture_url: String
  isActive: Boolean
}

input UpdateProductInput {
  product_id: Int!
  sku: String!
  supplier_sku: String
  product_category_id: Int
  product_name: String!
  msrp: Float
  price: Float!
  price_currency: String
  currency_symbole: String
  unit_title: String
  unit_weight: Float
  unit_weight_title: String
  is_discount: Boolean
  discount: Float
  ranking: Int
  reorder_level: Int
  is_active: Boolean
  rebuildsInput: [UpdateTagInput!]
}

input UpdateRateInput {
  rate_id: Int!
  rate_name: String!
}

input UpdateSeenInput {
  seen_id: Int!
}

input UpdateShipperInput {
  shipper_id: Int!
  shipper_name: String!
  contact_name: String!
  contact_title: String!
  url: String
  logo: String
  note: String
  our_id: String
}

input UpdateSupplierInput {
  supplier_id: Int!
  supplier_name: String
  contact_name: String
  contact_title: String
  url: String
  logo: String
  note: String
  our_id: String
}

input UpdateTagInput {
  tag_id: Int!
  tag_title: String!
}
